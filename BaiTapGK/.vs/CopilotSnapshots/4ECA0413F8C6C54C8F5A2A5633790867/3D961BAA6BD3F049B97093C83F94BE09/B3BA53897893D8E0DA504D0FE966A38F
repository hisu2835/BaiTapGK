using System;
using System.Drawing;
using System.Windows.Forms;

namespace BaiTapGK
{
    public partial class LoginForm : FullscreenSupportForm
    {
        public string PlayerName { get; private set; } = "";
        public bool IsLoggedIn { get; private set; } = false;

        public LoginForm()
        {
            InitializeComponent();
            this.StartPosition = FormStartPosition.CenterScreen;
            this.FormBorderStyle = FormBorderStyle.Sizable;
            this.MaximizeBox = true;
            this.MinimizeBox = true;
            this.MinimumSize = new Size(350, 220);
        }

        protected override void AdjustLayoutForFullscreen(bool isFullscreen)
        {
            if (isFullscreen)
            {
                ApplyFullscreenLoginLayout();
            }
            else
            {
                RestoreWindowedLoginLayout();
            }
        }

        private void ApplyFullscreenLoginLayout()
        {
            SuspendLayout();

            // Calculate scale factor
            float baseWidth = 350f;
            float baseHeight = 220f;
            
            float widthScale = this.ClientSize.Width / baseWidth;
            float heightScale = this.ClientSize.Height / baseHeight;
            
            float scaleFactor = Math.Min(widthScale, heightScale) * 0.6f; // More conservative for login
            scaleFactor = Math.Max(scaleFactor, 1.5f);
            scaleFactor = Math.Min(scaleFactor, 3.0f);

            int centerX = this.ClientSize.Width / 2;
            int centerY = this.ClientSize.Height / 2;

            // Title - top center
            if (lblTitle != null)
            {
                lblTitle.Font = new Font(lblTitle.Font.FontFamily,
                    Math.Max(lblTitle.Font.Size * scaleFactor, 14), FontStyle.Bold);
                lblTitle.AutoSize = true;
                lblTitle.Location = new Point(
                    centerX - lblTitle.PreferredSize.Width / 2,
                    centerY - (int)(80 * scaleFactor)
                );
            }

            // Player name label
            if (lblPlayerName != null)
            {
                lblPlayerName.Font = new Font(lblPlayerName.Font.FontFamily,
                    Math.Max(lblPlayerName.Font.Size * scaleFactor, 10));
                lblPlayerName.AutoSize = true;
                lblPlayerName.Location = new Point(
                    centerX - lblPlayerName.PreferredSize.Width / 2,
                    centerY - (int)(30 * scaleFactor)
                );
            }

            // Text box - centered
            if (txtPlayerName != null)
            {
                int textBoxWidth = (int)(300 * scaleFactor);
                int textBoxHeight = (int)(30 * scaleFactor);
                txtPlayerName.Size = new Size(textBoxWidth, textBoxHeight);
                txtPlayerName.Location = new Point(
                    centerX - textBoxWidth / 2,
                    centerY
                );
                txtPlayerName.Font = new Font(txtPlayerName.Font.FontFamily,
                    Math.Max(txtPlayerName.Font.Size * scaleFactor, 10));
            }

            // Buttons - centered horizontally below text box
            var buttons = new[] { btnLogin, btnCancel };
            var validButtons = buttons.Where(b => b != null).ToArray();
            
            if (validButtons.Length > 0)
            {
                int buttonWidth = (int)(130 * scaleFactor);
                int buttonHeight = (int)(40 * scaleFactor);
                int buttonSpacing = (int)(30 * scaleFactor);
                int totalButtonWidth = (validButtons.Length * buttonWidth) + 
                                      ((validButtons.Length - 1) * buttonSpacing);
                int buttonStartX = centerX - totalButtonWidth / 2;
                int buttonY = centerY + (int)(50 * scaleFactor);

                for (int i = 0; i < validButtons.Length; i++)
                {
                    var button = validButtons[i];
                    button.Size = new Size(buttonWidth, buttonHeight);
                    button.Location = new Point(
                        buttonStartX + (i * (buttonWidth + buttonSpacing)),
                        buttonY
                    );
                    
                    button.Font = new Font(button.Font.FontFamily,
                        Math.Max(button.Font.Size * scaleFactor, 9), FontStyle.Bold);
                }
            }

            ResumeLayout(true);
        }

        private void RestoreWindowedLoginLayout()
        {
            SuspendLayout();

            // Restore original positions
            if (lblTitle != null)
            {
                lblTitle.Font = new Font(lblTitle.Font.FontFamily, 16, FontStyle.Bold);
                lblTitle.Location = new Point(50, 20);
            }

            if (lblPlayerName != null)
            {
                lblPlayerName.Font = new Font(lblPlayerName.Font.FontFamily, 10);
                lblPlayerName.Location = new Point(30, 70);
            }

            if (txtPlayerName != null)
            {
                txtPlayerName.Size = new Size(290, 23);
                txtPlayerName.Location = new Point(30, 100);
                txtPlayerName.Font = new Font(txtPlayerName.Font.FontFamily, 10);
            }

            if (btnLogin != null)
            {
                btnLogin.Size = new Size(120, 35);
                btnLogin.Location = new Point(30, 150);
                btnLogin.Font = new Font(btnLogin.Font.FontFamily, 10, FontStyle.Bold);
            }

            if (btnCancel != null)
            {
                btnCancel.Size = new Size(120, 35);
                btnCancel.Location = new Point(200, 150);
                btnCancel.Font = new Font(btnCancel.Font.FontFamily, 10, FontStyle.Bold);
            }

            ResumeLayout(true);
        }

        private void btnLogin_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(txtPlayerName.Text))
            {
                MessageBox.Show("Vui long nhap ten nguoi choi!", "Thong bao", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                return;
            }

            PlayerName = txtPlayerName.Text.Trim();
            IsLoggedIn = true;
            this.DialogResult = DialogResult.OK;
            this.Close();
        }

        private void btnCancel_Click(object sender, EventArgs e)
        {
            this.DialogResult = DialogResult.Cancel;
            this.Close();
        }

        private void txtPlayerName_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (e.KeyChar == (char)Keys.Enter)
            {
                btnLogin_Click(sender, e);
            }
        }
    }
}